package com.lec206.ex04_mothod.declaration;

/*
메서드(Method)

메서드는 객체의 동작(기능)에 해당하는 중괄호{} 블럭이다.
중괄호 블럭은 이름을 가지고 있는데 이 것이 메서드 이름이다. 메서드를 호출하게 되면
이 중괄호 블럭에 정의되 실행문들이 일괄적으로 실행하게 된다.

메서드는 1) 필드를 읽거나 수정 2) 다른 객체를 생성해서 다양한 기능을 수행하기도 한다.
메서드는 객체간의 데이터 전달의 수단으로 사용된다. 메서드는 외부로 부터 매개값을 전달
받을 수 있고 실행한 후에 임의의 값을 전달할 수 있다.

1. 메서드의 선언

   메서드의 선언은 선언부와 실행블럭으로 구성된다. 선언부에는 리턴타입, 메서드이름 매개
   변수등을 선언하고 메서드선언부를 메서드 시그니쳐(signature)라고도 한다.
   
2. 리턴타입
  
   리턴타입은 메서드가 실행한 후 리턴하는 값의 데이터타입을 말한다. 메서드는 리턴값이
   있을 수도 있고 없을 수도 있다. 리턴값이 없을 경우에는 리터타입을 void라고 선언하고
   있을 경우에는 데이터타입(기본타입 및 참조타입포함)을 정의한다.
   메서드가 실행한 후에 결과를 호출한 곳으로 값을 반환할 경우에는 리턴값이 있어야 한다.

3. 메서드이름의 명명규칙

   1) 숫자로 시작하면 않되고 $와 _를 제외한 특수문자는 사용이 불가하다.
   2) 관례적으로 메서드이름은 소문자로 시작한다.
   3) 서로 다른 단어가 혼요이 될 경우에는 해당 단어의 첫 글자는 대문자로 작성한다.
*/

public class Calculator {
	
	void powerOn(){System.out.println("powerOn");};
	void powerOff(){System.out.println("powerOff");};
	
	int plus(int x, int y){
		int result = x+y;
		return result;
	}
	
	double divide(double x, int y){  //강제 형변환이 되어서 소수로 받아도 정수로계산
		return x/y;  //리턴문뒤엔 실행문x 문장끝남
		}			
	
	void oo(int x,int y){  //이문장을 실행만해도 나올수 있게 void가 없으면 출력 직접
		System.out.println(x*y);
	}
}
