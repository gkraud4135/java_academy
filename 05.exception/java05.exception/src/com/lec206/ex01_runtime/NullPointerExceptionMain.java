package com.lec206.ex01_runtime;

/*
	예외(Exception)
	
	자바에서 응용프로그램의 오류가 발생하는 것을 에러(Error)라고 한다. 에러는 JVM이 
	실행중에 문제가 발생한 경우로 결국 실행이 불가능하게 된다. 이럴 경우 개발자는
	이런 에러에 대처할 방법이 전혀 없게 된다.
	
	대부분의 프로그램에서 이런 에러이외에 예외(Exception)이라고 불리는 오류가 있는데
	예외란 사용자의 잘못된 조작 or 개발자의 잘못된 코딩으로 발생하는 프로그램 오류를
	말한다.
	
	예외가 발생하면 프로그램은 곧바로 종료가 된다는 점에서 에러와 동일하지만 예외는
	예외처리를 통해 프로그램을 종료하지 않고도 정상적인 실행상태를 유지 할 수 있도록
	한다.
	
	예외는 두 가지종류가 있는데 일반예외(Exception)와 실행예외(Runtime Exception)가
	있다.	
	
	1. 일반예외

	   컴파일에외라고도 한다. 자바소스를 컴파일하는 과정에서 예외처리코드가 필요한지
	   여부를 검사하기 때문이다. 만약 예외처리코드가 없다면 컴파일 오류가 발생산다.
	
	2. 실행예외
	
	   컴파일과정에서 예외처리코드의 유무를 검사하지 않는 예외를 말한다. 실행예외는 
	   자바 컴파일러가 예외를 체크하지 않기 때문에 오로지 개발자의 경험에 의해서 예외
	   처리를 해야한다.
	   
	   만약, 개발자가 실행예외에 대한 처리를 하는 코딩을 하지 않았을 경우 해당예외가 
	   발생한다면 프로그램은 곧바로 종료가 된다.
	   
	일반예외와 실행예외는 컴파일시에 처리하는지 안하는지 차이일 뿐 두 가지 모두 예외
	처리가 필요하다. 자바에서는 예외를 클래스로 관리한다.
	
	모든 예외클래스는 java.lang.Exception클래스를 상속 받는다. 일반예외와 실행예외클래
	스를 구분하는 방법은 일반예외는 Exception을 상속받지만 실행예외는 java.lang.RuntimeException
	클래스를 상속받느다.
	
*/
public class NullPointerExceptionMain {

	public static void main(String[] args) {
		
		String data = null;
		System.out.println(data.toString());

	}

}
