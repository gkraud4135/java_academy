package com.lec206.ex05_polymorphism;

/*
	1. 타입변환과 다형성
	
	   상속에서 타입변환과 다형성에 대해 보았듯이 인터페이스도 다형성을 구현하는
	   기법이 사용된다. 요즘에는 상속보다는 인터페이스를 통해서 다형성을 구현하는
	   경우가 많다.
	
	   다만 차이점은 상속은 같은 타입의 하위클래스를 만드는 기법이고 인터페이스는 
	   동일한 클래스를 만드는 기법이다. 둘다 다형성을 구현하는 방법에서는 동일한
	   개념이다.
	
	2. 매개변수의 다형성
	
	   자동타입변환은 필드의 값을 대입할 때에도 발생하지만 주로 메서드를 호출할 때
	   더 많이 발생한다.
	   
	   매개값을 다양화하기 위해서는 상속에서는 매개변수를 부모타입으로 선언하고 호출
	   할 때에는 자식객체를 대입했지만 인터페이스에서는 매개변수를 인터페이스 타입으로
	   선언하고 메서드를 호출할 때 구현객체를 대입한다.
*/
public class DriverMain {

	public static void main(String[] args) {
		
		Driver driver = new Driver();
		driver.drive(new Taxi());
		driver.drive(new Bus());
	}

}
